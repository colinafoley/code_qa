<?php

/**
 * @file
 * Install, update and uninstall functions.
 */

/**
 * Implements hook_schema().
 */
function phploc_result_schema() {
  $schema['phploc_result'] = array(
    'description' => 'The base table for phploc results.',
    'fields' => array(
      'prid' => array(
        'description' => 'The primary identifier for a phploc result.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'module' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'description' => 'The machine name of the module',
      ),
      'timestamp' => array(
        'description' => 'The Unix timestamp for the code evaluation.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'directories' => array(
        'description' => 'The number of lines directories.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'files' => array(
        'description' => 'The number of files.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'loc' => array(
        'description' => 'The number of lines of code.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'cc_loc' => array(
        'description' => 'Ratio of cyclomatic complexity to lines of code',
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
      ),
      'commented_loc' => array(
        'description' => 'The number of commented lines of code.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'non_commented_loc' => array(
        'description' => 'The number of non-commented lines of code.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'lloc' => array(
        'description' => 'Logical lines of code.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'namespaces' => array(
        'description' => 'The number of namespaces.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'interfaces' => array(
        'description' => 'The number of interfaces of code.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'traits' => array(
        'description' => 'The number of traits of code.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'classes' => array(
        'description' => 'The number of classes.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'abstract_classes' => array(
        'description' => 'The number of abstract classes.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'concrete_classes' => array(
        'description' => 'The number of concrete classes.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'avg_class_length' => array(
        'description' => 'The average number of lines of code in a class.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'methods' => array(
        'description' => 'The number of methods.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'non_static_methods' => array(
        'description' => 'The number of non-static methods.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'static_methods' => array(
        'description' => 'The number of static methods.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'public_methods' => array(
        'description' => 'The number of public methods.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'non_public_methods' => array(
        'description' => 'The number of non-public methods.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'avg_method_length' => array(
        'description' => 'The average number of lines of code in a method.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'cc_methods' => array(
        'description' => 'Ratio of cyclomatic complexity to number of methods.',
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
      ),
      'functions' => array(
        'description' => 'The number of functions.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'named_functions' => array(
        'description' => 'The number named of functions.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'anonymous_functions' => array(
        'description' => 'The number of anonymous functions.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'constants' => array(
        'description' => 'The number of constants.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'global_constants' => array(
        'description' => 'The number of global constants.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'class_constants' => array(
        'description' => 'The number of class constants.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'attribute_accesses' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'non_static_attribute_accesses' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'static_attribute_accesses' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'method_calls' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'non_static_method_calls' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'static_method_calls' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'global_accesses' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'global_variable_accesses' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'super_global_var_accesses' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'global_constant_accesses' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'test_classes' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'test_methods' => array(
        'description' => '',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('prid'),
    'indexes' => array(
      'prid' => array('prid'),
    ),
  );

  return $schema;
}

